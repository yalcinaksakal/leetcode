// 675.CutOffTreesforGolfEvent

/**
 * @param {number[][]} forest
 * @return {number}
 */
var cutOffTree = function (forest) {
  if (!forest[0][0]) return -1;

  const m = forest.length;
  const n = forest[0].length;
  const treesToCut = forest
    .flat()
    .filter(t => t > 1)
    .sort((a, b) => a - b);

  // let nextTree = 0;
  // console.log(m, n, treesToCut);
  if (forest[0][0] === treesToCut[0]) {
    forest[0][0] = 1;
    treesToCut.shift();
  }

  // nextTree++;
  // if (nextTree === treesToCut.length) done = 0;

  const dijkstra = (x, y, destination) => {
    const visited = {};
    const unvisited = [];
    const shortestPath = {};
    shortestPath[`${x}-${y}`] = 0;
    visited[`${x}-${y}`] = 1;

    let low, mid, high, oldVal;
    const setUnvisited = (x, y, value, processType) => {
      low = 0;
      mid = 0;
      high = unvisited.length;
      while (low < high) {
        mid = (low + high) >>> 1;
        if (unvisited[mid].value < value) low = mid + 1;
        else high = mid;
      }
      //low is the position in sorted array
      if (processType === "delete") {
        let check = false,
          repeat = true;
        while (!check && repeat) {
          repeat = unvisited[low]?.value === value;
          check = unvisited[low]?.x === x && unvisited[low]?.y === y && repeat;
          low++;
        }
        if (check) unvisited.splice(low - 1, 1);
        return;
      }
      //add
      unvisited.splice(low, 0, { x, y, value });
    };

    const isPossible = (x, y) =>
      !(x < 0 || y < 0 || x > m - 1 || y > n - 1 || !forest[x][y]);

    const addPossibleSteps = (x, y) => {
      for (const [a, b] of [
        [x - 1, y],
        [x + 1, y],
        [x, y - 1],
        [x, y + 1],
      ])
        if (isPossible(a, b)) {
          oldVal = shortestPath[`${a}-${b}`];
          if (oldVal === undefined || oldVal > shortestPath[`${x}-${y}`] + 1)
            shortestPath[`${a}-${b}`] = shortestPath[`${x}-${y}`] + 1;
          if (visited[`${a}-${b}`]) continue;
          if (oldVal) setUnvisited(a, b, oldVal, "delete");
          setUnvisited(a, b, shortestPath[`${a}-${b}`]);
        }
    };

    addPossibleSteps(x, y);
    let nextNode = unvisited.shift();
    while (nextNode) {
      if (forest[nextNode.x][nextNode.y] === destination)
        return {
          steps: shortestPath[`${nextNode.x}-${nextNode.y}`],
          ok: true,
          arrived: { x: nextNode.x, y: nextNode.y },
        };
      visited[`${nextNode.x}-${nextNode.y}`] = 1;
      addPossibleSteps(nextNode.x, nextNode.y);
      nextNode = unvisited.shift();
    }
    return { ok: false };
  };
  let sx = 0,
    sy = 0,
    path,
    steps = 0;
  while (treesToCut.length) {
    path = dijkstra(sx, sy, treesToCut.shift());
    if (!path.ok) return -1;
    steps += path.steps;
    sx = path.arrived.x;
    sy = path.arrived.y;
  }

  return steps;
};

let mat = [
  [2395, 206, 0, 5388],
  [4985, 2866, 0, 1789],
  [0, 0, 7052, 0],
  [0, 3029, 3327, 685],
  [0, 0, 7846, 0],
  [0, 0, 1542, 0],
  [7577, 0, 2902, 623],
  [2610, 9817, 0, 8198],
];

mat = [
  [1, 2, 3],
  [0, 0, 4],
  [7, 6, 5],
];
mat = [
  [
    78286, 75182, 56288, 96996, 42333, 13203, 74081, 74151, 16154, 18229, 0,
    22253, 52847, 40861, 21393, 38736, 50472, 55793, 61871, 47951, 0, 44737,
    46989, 2803, 66270, 94807, 95378, 1120, 28431, 30593, 16481, 35574, 59747,
    17538, 60254, 47527,
  ],
  [
    83842, 52564, 14434, 50711, 86441, 0, 36252, 7907, 74121, 39890, 92460, 0,
    0, 29908, 40579, 89539, 0, 21630, 36577, 42183, 54220, 68214, 9298, 17550,
    61911, 92627, 8916, 74444, 33633, 31991, 99608, 54985, 41179, 75697, 98512,
    0,
  ],
  [
    13265, 69519, 16387, 51517, 25564, 14781, 21568, 13771, 1702, 0, 69089,
    30014, 1276, 0, 65598, 86904, 25515, 49369, 29994, 85707, 5087, 41937,
    34521, 9734, 72779, 71990, 56739, 1793, 19130, 68970, 94533, 3771, 87196,
    57304, 93156, 40213,
  ],
  [
    0, 89157, 12247, 95535, 40939, 54509, 17363, 76328, 22509, 68437, 64824,
    48335, 98358, 68041, 88179, 949, 15213, 13938, 26617, 79975, 6352, 0, 95071,
    67770, 79274, 59181, 20295, 12942, 8725, 18158, 77211, 64768, 0, 0, 6587,
    41108,
  ],
  [
    55255, 59724, 96323, 234, 8336, 25035, 71754, 62063, 0, 38949, 38895, 0,
    45243, 98637, 43987, 55466, 65307, 34169, 19567, 15523, 89633, 36035, 86783,
    46066, 21660, 96813, 3068, 63504, 81029, 7136, 23674, 10131, 51302, 36649,
    72826, 24004,
  ],
  [
    0, 53502, 78737, 21082, 16874, 49118, 21250, 10214, 85955, 38219, 58089,
    75339, 72828, 11207, 0, 8756, 28492, 72922, 67057, 15288, 63374, 37461,
    98840, 11437, 89000, 68006, 59954, 4398, 40380, 7036, 9091, 3391, 42556, 0,
    40126, 88928,
  ],
  [
    41294, 33060, 91856, 43317, 32659, 37057, 53659, 45147, 53013, 68624, 3732,
    15847, 35570, 73155, 57833, 24065, 16867, 54177, 27303, 0, 0, 33468, 82275,
    31482, 47526, 82925, 69610, 48628, 22263, 40867, 82603, 97729, 43609, 4666,
    3888, 27241,
  ],
  [
    39844, 35948, 66125, 61443, 85908, 36271, 97772, 67468, 42394, 42585, 49074,
    62694, 64801, 88632, 92046, 88377, 2332, 30778, 36301, 0, 17344, 37866,
    92506, 44747, 30873, 49812, 51556, 62301, 52272, 85191, 33634, 43248, 0,
    95403, 11639, 42617,
  ],
  [
    79854, 56239, 78226, 39538, 18733, 55955, 0, 46764, 16986, 33025, 90012,
    95070, 81876, 0, 52584, 57447, 93284, 15331, 134, 62295, 84550, 65795,
    19418, 0, 0, 58984, 89362, 12429, 86740, 76298, 94199, 86430, 53395, 96560,
    41430, 12281,
  ],
  [
    33285, 731, 35838, 12095, 43677, 28517, 95440, 32575, 58496, 0, 0, 35874,
    17790, 0, 1249, 31640, 6235, 28724, 36196, 0, 18133, 51417, 88503, 0, 66813,
    56733, 54017, 0, 41418, 75079, 61391, 39372, 84962, 36321, 63252, 0,
  ],
  [
    85338, 0, 40334, 45126, 94920, 0, 67908, 43603, 11546, 37521, 34907, 41049,
    47102, 66021, 22422, 62540, 73252, 0, 76051, 28742, 17190, 43007, 96062,
    4769, 89589, 96073, 36723, 78703, 65021, 0, 63393, 1282, 1895, 75214, 14214,
    78267,
  ],
  [
    30048, 50762, 93675, 98718, 58675, 48923, 32800, 46013, 96180, 17576, 50402,
    4550, 7732, 25276, 31420, 22785, 98326, 58978, 0, 0, 0, 95054, 6354, 14569,
    63117, 78665, 0, 46010, 88437, 43867, 64806, 29001, 1975, 7840, 88155,
    93799,
  ],
  [
    72284, 94656, 62600, 40512, 69583, 79084, 91426, 0, 42508, 46990, 0, 7614,
    26476, 57328, 0, 37933, 15306, 70200, 59042, 92573, 0, 2990, 13188, 77543,
    33111, 69980, 0, 669, 65957, 79366, 56274, 88007, 0, 15580, 77606, 42847,
  ],
  [
    0, 53808, 45093, 68460, 70131, 13023, 45348, 44476, 0, 49897, 0, 91247,
    44085, 7292, 22412, 23880, 0, 86957, 73380, 9891, 23510, 50019, 19210,
    21105, 95948, 0, 90449, 76933, 83183, 83690, 39555, 50306, 31697, 55681,
    79907, 74096,
  ],
  [
    0, 0, 52270, 65870, 8219, 0, 75003, 62167, 30765, 25308, 13181, 55724,
    50434, 83519, 27576, 11084, 80222, 7594, 66728, 51896, 48338, 0, 4568,
    66933, 56745, 45627, 99346, 40375, 30136, 95878, 0, 27464, 55677, 92236,
    3019, 75713,
  ],
  [
    0, 51066, 99890, 55638, 18340, 81124, 74639, 20102, 49046, 21892, 51619,
    53170, 59984, 11186, 53818, 8089, 53604, 17079, 47965, 0, 22338, 54762,
    52481, 57690, 52400, 6517, 42334, 33058, 93082, 5853, 91947, 99845, 12349,
    35090, 0, 4755,
  ],
  [
    63070, 43592, 79029, 77695, 0, 54373, 77414, 72618, 62286, 0, 51525, 86657,
    0, 0, 59921, 82203, 90187, 6704, 91881, 15113, 33539, 22710, 11749, 95857,
    78807, 4907, 69206, 0, 98146, 64939, 41007, 46155, 46178, 14860, 37857,
    80015,
  ],
  [
    14982, 11686, 34531, 34407, 64333, 24034, 59908, 98289, 87772, 94114, 37399,
    14985, 22167, 27666, 26544, 4078, 0, 0, 28877, 86725, 6928, 21620, 84358,
    89614, 82904, 25160, 28489, 50774, 10314, 27510, 2170, 94041, 22567, 42424,
    41326, 14927,
  ],
  [
    16172, 0, 31462, 40500, 26731, 88764, 86254, 50629, 26956, 12234, 45673,
    80785, 69426, 2714, 88379, 0, 25925, 59098, 77776, 9690, 8172, 61411, 40221,
    97207, 23140, 36115, 45293, 27885, 84661, 65139, 95030, 0, 35748, 17545, 0,
    0,
  ],
  [
    52314, 0, 38429, 1538, 64592, 18080, 70368, 17863, 59163, 94120, 16227,
    20606, 26223, 0, 65138, 38434, 18640, 0, 87874, 99682, 57020, 72007, 43588,
    87919, 98448, 53889, 0, 9768, 73290, 8843, 81723, 31498, 21850, 0, 17904,
    7982,
  ],
  [
    62569, 93819, 5972, 54645, 51142, 13427, 85848, 80080, 88619, 74515, 56022,
    67867, 21162, 94933, 3149, 5620, 7507, 97553, 22725, 2925, 7505, 14513, 0,
    28256, 10251, 17517, 58573, 82848, 41539, 94267, 82148, 23633, 80569, 82391,
    44835, 45620,
  ],
  [
    0, 44167, 95855, 9145, 4262, 2017, 36462, 62805, 489, 64165, 53698, 58604,
    88833, 88944, 68536, 97069, 85774, 86647, 55373, 24348, 88297, 28408, 65323,
    28934, 3309, 91599, 85718, 91398, 10445, 34034, 20880, 53692, 47458, 81834,
    36888, 54290,
  ],
  [
    14604, 27441, 78556, 69080, 39419, 30453, 15760, 26727, 81584, 87703, 5387,
    26588, 0, 74944, 26521, 63559, 77847, 56380, 99291, 57023, 93989, 74178, 0,
    89973, 79640, 66052, 21580, 25838, 36268, 56816, 55642, 89992, 81483, 79948,
    60651, 74938,
  ],
  [
    38339, 0, 57504, 23231, 0, 82690, 88665, 12346, 0, 50558, 54421, 8853,
    45034, 75764, 3458, 0, 0, 61050, 76503, 81878, 92186, 0, 73079, 65352,
    58849, 39485, 27106, 78999, 28859, 48300, 88487, 45894, 65860, 32507, 56532,
    47136,
  ],
  [
    41118, 73506, 10748, 52760, 0, 83939, 86088, 18274, 0, 57339, 74543, 53088,
    79407, 63811, 4184, 94664, 6357, 32105, 78264, 96267, 82271, 65843, 76447,
    11988, 41327, 67640, 36724, 7603, 14640, 68598, 94618, 26046, 83404, 21148,
    0, 12066,
  ],
  [
    82990, 63008, 82776, 80677, 68171, 12806, 74542, 89236, 58803, 0, 76311,
    23958, 11547, 17435, 54100, 75578, 77979, 24031, 59321, 84034, 64754, 4341,
    35923, 29456, 65588, 90143, 80987, 94212, 19513, 87418, 47778, 97191, 0,
    21337, 22658, 9668,
  ],
  [
    0, 55412, 30558, 93036, 83748, 1110, 55654, 56981, 9745, 6892, 40946, 33996,
    66583, 0, 1982, 79151, 82277, 41016, 88963, 2917, 0, 83236, 98543, 0, 80929,
    27955, 36343, 0, 17071, 47478, 47810, 96805, 17199, 55644, 78295, 0,
  ],
  [
    0, 50345, 56766, 26039, 42826, 68719, 17779, 27760, 95139, 0, 33958, 74382,
    29210, 77560, 21613, 0, 51281, 49888, 80087, 45526, 21004, 77987, 78988,
    59193, 0, 80108, 90041, 81625, 112, 0, 19454, 1759, 22761, 51604, 36326,
    95319,
  ],
  [
    13577, 0, 40130, 10781, 73646, 65923, 12802, 60109, 0, 52090, 75970, 85408,
    0, 11656, 20747, 30208, 51885, 63197, 44160, 0, 45882, 52730, 58073, 66309,
    63010, 87329, 65777, 60685, 80843, 47592, 47417, 1508, 65272, 0, 42380,
    87370,
  ],
  [
    88214, 91470, 5128, 44177, 61788, 86401, 87040, 96851, 67185, 56656, 52457,
    7765, 10272, 89691, 18850, 5443, 76425, 9899, 0, 84608, 73688, 55639, 19391,
    63576, 35451, 95993, 0, 62249, 65134, 9053, 29790, 71578, 24785, 66664,
    69072, 0,
  ],
  [
    7741, 62900, 21537, 58824, 99737, 35279, 81283, 0, 9450, 21697, 50176,
    56785, 23100, 56718, 93248, 54336, 35654, 45552, 36405, 5295, 43045, 74969,
    88897, 23570, 82530, 53403, 93067, 0, 20566, 86572, 0, 53207, 0, 74449,
    38328, 21334,
  ],
  [
    2930, 84499, 49780, 6249, 22841, 46583, 79603, 98334, 91840, 85599, 46434,
    77811, 79866, 30077, 41256, 72884, 0, 51106, 35784, 49652, 95732, 3445,
    20737, 53222, 8622, 36291, 84132, 17913, 93639, 83229, 65556, 0, 50032,
    46830, 40065, 27718,
  ],
  [
    74438, 66971, 23733, 70531, 50905, 81568, 17457, 749, 15851, 85428, 71062,
    1726, 29764, 72275, 0, 31566, 78532, 74953, 30124, 48266, 53295, 65782,
    40128, 75683, 23667, 63711, 87731, 54214, 36694, 39536, 91105, 4674, 56917,
    13906, 0, 93793,
  ],
  [
    36490, 14761, 65349, 36382, 21439, 10934, 91228, 9635, 32165, 80580, 80088,
    56198, 61281, 51815, 89835, 98880, 0, 83806, 19145, 12419, 26873, 45908,
    98874, 0, 31584, 44088, 0, 86545, 62433, 54425, 5832, 91790, 56550, 45740,
    81074, 51164,
  ],
  [
    15201, 0, 12099, 41437, 86199, 76065, 55523, 94854, 82280, 24435, 5014,
    42376, 38211, 0, 25765, 82355, 82154, 38291, 58929, 17251, 0, 0, 0, 6911,
    97177, 68801, 67213, 512, 82220, 70342, 51123, 24552, 41098, 96929, 25747,
    64060,
  ],
  [
    19699, 46914, 42229, 58899, 37845, 65732, 80807, 14812, 89688, 4019, 95895,
    95691, 373, 20237, 5628, 0, 89515, 83237, 67380, 0, 10541, 0, 81895, 47911,
    49173, 51836, 17498, 42099, 73218, 93404, 54379, 57122, 16925, 84184, 62680,
    0,
  ],
  [
    83759, 7303, 73222, 49883, 49149, 9558, 49666, 27866, 2614, 61594, 37179, 0,
    2937, 41363, 20169, 0, 37091, 66739, 81382, 93998, 67812, 0, 83574, 3610,
    96511, 89815, 34356, 52381, 28048, 52163, 56496, 78534, 33359, 89895, 64657,
    6606,
  ],
  [
    68286, 36263, 61740, 63501, 0, 92379, 79309, 84154, 12039, 24654, 91239,
    61713, 17173, 68026, 74147, 53138, 67312, 46174, 47425, 27864, 82344, 38477,
    98696, 0, 8498, 28648, 10146, 1893, 82144, 0, 64849, 64517, 41038, 63733,
    44240, 69736,
  ],
  [
    45895, 0, 9398, 59675, 27485, 26911, 79051, 55933, 2187, 74354, 42350,
    23521, 58570, 56600, 35252, 90136, 5797, 73893, 64028, 0, 37768, 63721, 0,
    95729, 92130, 12811, 99181, 18374, 29679, 91480, 31586, 25200, 57058, 63157,
    2178, 36086,
  ],
  [
    69535, 45983, 49520, 63346, 96546, 63370, 94777, 24390, 3404, 18351, 73487,
    64731, 79818, 38501, 69039, 3325, 97380, 19459, 48195, 38053, 11531, 10765,
    41080, 8408, 76886, 54510, 4301, 64329, 31940, 0, 60135, 90358, 91615,
    26633, 3825, 49232,
  ],
  [
    84696, 0, 19751, 0, 0, 21124, 27839, 3221, 62637, 0, 49716, 55117, 0, 20488,
    0, 15342, 71082, 0, 0, 9678, 45391, 82922, 28384, 60830, 9798, 73980, 65113,
    30713, 75009, 22111, 91376, 14243, 68789, 33731, 92279, 75640,
  ],
  [
    54570, 53618, 75676, 10949, 44247, 37493, 99877, 28239, 0, 73792, 0, 48151,
    92330, 53124, 63502, 90216, 29639, 38874, 45252, 50983, 69589, 47457, 24431,
    61410, 51796, 20183, 17775, 66834, 0, 41980, 86322, 79585, 98349, 54238,
    19784, 37975,
  ],
  [
    27822, 96710, 49305, 26520, 70576, 20190, 56951, 28054, 94896, 91032, 7659,
    70964, 56920, 39286, 0, 52300, 94615, 35253, 0, 27830, 0, 36113, 99701,
    47724, 85851, 6793, 8677, 90617, 1152, 14181, 15993, 78368, 97223, 51404,
    21803, 46896,
  ],
  [
    10073, 0, 72595, 21692, 2811, 72448, 24948, 0, 44520, 0, 38970, 0, 36620,
    90729, 90534, 50976, 8868, 98900, 28481, 52045, 49890, 51257, 96051, 81582,
    34406, 57712, 47970, 66808, 98160, 10612, 14470, 63160, 42865, 29038, 43215,
    92065,
  ],
  [
    81729, 32082, 91405, 58111, 30723, 53083, 0, 57944, 19441, 17228, 42244,
    63328, 30516, 33819, 1790, 18697, 11545, 26207, 5261, 44832, 23162, 49672,
    36879, 60916, 73460, 3678, 33127, 8352, 72587, 77922, 1150, 61149, 38584,
    61016, 14391, 0,
  ],
  [
    3619, 59055, 38482, 11116, 0, 58683, 0, 56180, 87474, 87650, 25047, 0,
    26694, 41580, 1691, 59684, 78934, 38798, 49479, 3516, 85992, 0, 58255,
    86278, 62239, 63503, 21624, 53729, 63603, 89822, 37594, 12553, 78183, 50016,
    67217, 98423,
  ],
  [
    98076, 16988, 52766, 46048, 8715, 10780, 52448, 1515, 77766, 10104, 88493,
    98414, 68021, 17911, 82419, 96436, 20341, 45310, 63109, 81401, 80628, 15028,
    0, 40563, 95923, 51199, 42118, 84860, 44248, 38300, 89273, 8887, 27858,
    23326, 89506, 99894,
  ],
  [
    3270, 70718, 7801, 67547, 36937, 4536, 47853, 8759, 25649, 19600, 95120,
    16225, 0, 21546, 9927, 45725, 11500, 16546, 1396, 31430, 83047, 79946, 488,
    68403, 86958, 54695, 415, 22235, 96016, 82184, 649, 95375, 5239, 7900, 4326,
    32716,
  ],
  [
    9747, 47603, 60637, 16614, 96410, 84194, 90071, 34204, 58936, 34185, 39129,
    91409, 94932, 16821, 96686, 72208, 13750, 99561, 80671, 66018, 68791, 76308,
    13425, 18072, 68296, 64652, 84700, 69221, 0, 14223, 43918, 66455, 349,
    14868, 66032, 61379,
  ],
];

console.log(cutOffTree(mat));
